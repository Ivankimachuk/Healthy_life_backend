{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Healthy-Life API",
    "description": "Healthy-Life API. It is a full-fledged RESTful API linked to an extensive database and multiple routes.",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://healthy-life-backend-b6ck.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User's endpoins"
    },
    {
      "name": "Recommended Food",
      "description": "Recommended food endpoints"
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "security": [
            {
              "Bearer": []
            }
          ],
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email already in use",
            "content": {}
          }
        }
      }
    },
    "/api/auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logs user into the system",
        "parameters": [],
        "requestBody": {
          "description": "User login object",
          "security": [
            {
              "Bearer": []
            }
          ],
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password invalid"
          }
        }
      }
    },
    "/api/auth/forgot-password": {
      "post": {
        "tags": ["Auth"],
        "summary": "Sending a new password to the mail",
        "parameters": [],
        "requestBody": {
          "description": "Forgot-Password object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password updated successfully. Check your email for the new password"
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },
    "/api/auth/signout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Logout success"
          }
        }
      }
    },
    "/api/user/current": {
      "get": {
        "tags": ["User"],
        "summary": "Get information of current user.",
        "description": "Retrieve information about the currently authenticated user.",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successfully retrieved current user information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "message": "Bad Request."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized."
                }
              }
            }
          },
          "500": {
            "description": "Server error.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Server error."
                }
              }
            }
          }
        }
      }
    },
    "/api/user/update": {
      "put": {
        "tags": ["User"],
        "summary": "Update user information",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update user information",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserResponse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "message": "Bad Request."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized."
                }
              }
            }
          },
          "500": {
            "description": "Server error.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Server error."
                }
              }
            }
          }
        }
      }
    },
    "/api/user/goal": {
      "put": {
        "tags": ["User"],
        "summary": "Update user's goal",
        "description": "Update the user's goal, which will recalculate daily nutrition based on the new goal",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "User's new goal object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoalUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GoalUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "message": "\"goal\" must be one of [Lose Fat, Maintain, Gain Muscle]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Server error.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Server error."
                }
              }
            }
          }
        }
      }
    },
    "/api/user/weight": {
      "post": {
        "tags": ["User"],
        "summary": "Update user's weigh",
        "description": "Add the user's weight, which will recalculate daily nutrition and update other relevant information.",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "User's weight object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WeightUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WeightUpdateResponses"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "message": "\"weight\" must be a number"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized."
                }
              }
            }
          },
          "500": {
            "description": "Server error.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Server error."
                }
              }
            }
          }
        }
      }
    },
    "/api/user/water-intake": {
      "get": {
        "tags": ["User"],
        "summary": "Create a user's water intake record",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterIntakeGetResponse"
                }
              }
            }
          }
        },
        "500": {
          "description": "Failed to get water intake for date"
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "Add of water intake",
        "description": "Adds a water intake for an authoriazed user",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaterIntakeInput"
              },
              "example": {
                "value": 500
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Water intake added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterIntakeInputResponse"
                }
              }
            }
          }
        },
        "500": {
          "description": "Failed to add water intake"
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete of water intake",
        "description": "Deletes of water intake for a registered user",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaterIntakeDeleteInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "type": "string",
            "description": "Water intake deleted successfully"
          }
        }
      }
    },
    "/api/user/statistics": {
      "get": {
        "tags": ["User"],
        "summary": "Get user's statistics.",
        "description": "Get user's statistics from month.",
        "parameters": [
          {
            "in": "path",
            "name": "queryMonth",
            "required": true,
            "schema": {
              "type": "number",
              "example": 12
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserStatisticsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "message": "Bad Request."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized."
                }
              }
            }
          },
          "500": {
            "description": "Server error.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Server error."
                }
              }
            }
          }
        }
      }
    },
    "/api/recommended-food": {
      "get": {
        "tags": ["Recommended Food"],
        "summary": "Get food recommendations",
        "description": "Retrieve a list of recommended food items.",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request. Returns a list of recommended food items.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendedFoodResponse"
                },
                "example": [
                  {
                    "_id": "657b338690119f0a27c9426c",
                    "name": "Apples",
                    "amount": "100 g",
                    "img": "https://res.cloudinary.com/dec1shvoo/image/upload/v1692479041/Your%20health/pngfind.com-apple-png-1037796_udjai9.png",
                    "calories": 52,
                    "nutrition": {
                      "carbohydrates": 14,
                      "protein": 0.3,
                      "fat": 0.2
                    }
                  }
                ]
              }
            }
          },
          "500": {
            "description": "Server error. Unable to retrieve food recommendations."
          }
        }
      }
    },
  "api/user/food-intake": {
    "post": {
      "tags":["User"],
      "summary": "Add food intake for an authoriazed user",
      "parameters": [],
      "security": [
        {
          "Bearer": "[]"
        }
      ],
      "requestBody": {
        "description": "Food-intake object",
        "required": true,
        "content": {
          "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FoodIntakeInput"
              }
           
          }
        }
        },
      
      "responses": {
        "200": {
                  "description": "Create food intake",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/FoodIntakePostResponse"
                      }
                    }
                  }
                },
                   
        "400": {
                "description": "Bad Request",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "\"typeFood\" is required"
                    }
                  }
                }
              },
        "401": {
                "description": "Unauthorized.",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Unauthorized."
                    }
                  }
                }
              },
        "404": {
                "description": "",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Not found"
                    }
                  }
                }
              },
        "500": {
            "description": "Server error.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Server error."
                }
              }
            }
          }
        }
      },
      
          "delete": {
            "tags":["User"],
            "summary": "Delete food intake",
            "description": "Delete food intake for a registered user",
            "parameters": [],
            "security": [
              {
                "Bearer": "[]"
              }
            ],
            "requestBody": {
              "description": "Food-intake object",
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FoodIntakeDeleteInput"
                  }
                }
              }
            },
          "responses": {
          "200": {
              "description": "Delete food intake",
              "type": "string",
              "content": {
                "application/json": {
                  "example": {
                    "message": "Food deleted success"
                  }
                }
              }
            },
          "400": {
                    "description": "Bad Request",
                    "content": {
                      "application/json": {
                        "example": {
                          "message": "\"typeFood\" is required"
                        }
                      }
                    }
                  },
          "401": {
                    "description": "Unauthorized.",
                    "content": {
                      "application/json": {
                        "example": {
                          "message": "Unauthorized."
                        }
                      }
                    }
                  },
          "404": {
                    "description": "Not found food",
                    "content": {
                      "application/json": {
                        "example": {
                          "message": "Not found food"
                        }
                      }
                    }
                  },
          "500": {
                    "description": "Server error.",
                    "content": {
                      "application/json": {
                        "example": {
                          "message": "Server error."
                        }
                      }
                    }
                  }
                }
              },
                  "get": {
                    "tags":["User"],
                    "summary": "Create a user's food intake  for a  current date",
                    "parameters": [],
                    "security": [
                      {
                        "Bearer": []
                      }
                    ],
                    "responses": {
                      "200": {
                        "description": "Successful",
                        "content": {
                          "application/json": {
                            "schema": {
                              "$ref": "#/components/schemas/FoodIntakeGetResponse"
                            }
                          }
                        }
                      },
                      "401": {
                      "description": "Unauthorized.",
                      "content": {
                        "application/json": {
                          "example": {
                            "message": "Unauthorized."
                          }
                        }
                      }
                    },
                    "404": {
                      "description": "Not found food",
                      "content": {
                        "application/json": {
                          "example": {
                            "message": "Not found food"
                          }
                        }
                      }
                    }
                  }
                }
              },
              
  "/api/user/food-intake/:id": {
               "put": {
               "tags":["User"],
               "summary": "Update food intake for a specific product",
              "parameters": [
                   {
                     "name": "id",
                            "in": "path",
                            "description": "ID of the food product to update for an authorized user",
                            "required": true
                            }
                          ],
                          
                        
                        "security": [
                          {
                            "Bearer": "[]"
                          }
                        ],
                        "requestBody": {
                          "description": "Food  object",
                          "required": true,
                          "content": {
                            "application/json": {
                              "schema": {
                                "$ref": "#/components/schemas/FoodIntakeInput"
                                        }
                                      }
                                    }
                                  },  
                      
                "responses": {
                          "200": {
                         "description": "Successful update",
                             "content": {
                                "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/FoodIntakeGetResponse"
                                           },
                                     "example": {
                                  "_id": "65886929070babe3027cf5c2",
                                 "owner": "6586fe5f3cce842ef95d99d4",
                                  "date": "2023-12-24",
                                "month": 12,
                               "totalProteins": 7,
                              "totalFats": 20,
                             "totalCarbs": 20,
                             "totalCalories": 50,
                             "breakfast": [
                             {
                            "name": "english breakfast",
                            "calories": 50,
                            "nutrition": {
                             "carbogidrate": 20,
                             "protein": 7,
                               "fat": 20
                              },
                               "_id": "65887c3d224f9ebd144b9429"
                               }
                              ],
                            "dinner": [],
                            "lunch": [],
                           "snack": [],
                             "__v": 4
                            }
                              }
 }
                          },
             "400": {
                   "description": "Bad Request",
                    "content": {
                    "application/json": {
                    "example": {
                    "message": "\"typeFood\" is required"
                     }
                       }
                    }
                            },
            "401": {
                    "description": "Unauthorized.",
                     "content": {
                      "application/json": {
                        "example": {
                          "message": "Unauthorized."
                              }
                              }
                               }
                        },
            "404": {
                          "description": "Not found",
                           "content": {
                           "application/json": {
                            "example": {
                              "message": "Not found"
                               }
                                 }
                                 }
                            },
           "500": {
         "description": "Server error.",
        "content": {
        "application/json": {
         "example": {
         "message": "Server error."
            }
            }
            }
             }
             }
              }
              }
              },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password",
          "goal",
          "gender",
          "age",
          "height",
          "weight",
          "activityLevel"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Alex"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "goal": {
            "type": "string",
            "description": "User's goal",
            "example": "Maintain"
          },
          "gender": {
            "type": "string",
            "description": "User's gender",
            "example": "male"
          },
          "age": {
            "type": "integer",
            "description": "User's age",
            "example": "18"
          },
          "height": {
            "type": "integer",
            "description": "User's height",
            "example": "160"
          },
          "weight": {
            "type": "integer",
            "description": "User's weight",
            "example": "60"
          },
          "activityLevel": {
            "type": "number",
            "description": "User's activityLevel",
            "example": "1.2"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "user": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "User's email",
              "example": "Alex"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "goal": {
              "type": "string",
              "description": "User's goal",
              "example": "Maintain"
            },
            "gender": {
              "type": "string",
              "description": "User's gender",
              "example": "male"
            },
            "age": {
              "type": "integer",
              "description": "User's age",
              "example": "18"
            },
            "height": {
              "type": "integer",
              "description": "User's height",
              "example": "160"
            },
            "weight": {
              "type": "integer",
              "description": "User's weight",
              "example": "60"
            },
            "activityLevel": {
              "type": "number",
              "description": "User's activityLevel",
              "example": "1.2"
            },
            "avatar": {
              "type": "string",
              "description": "User's gravatar",
              "example": "//www.gravatar.com/avatar/6bf1c3e37665abb9a1e0e3f81796c87c?s=2503"
            },
            "waterRate": {
              "type": "integer",
              "description": "User's waterRate",
              "example": "2150"
            },
            "BMRRate": {
              "type": "integer",
              "description": "User's BMRRate",
              "example": "1451"
            },
            "proteinRate": {
              "type": "integer",
              "description": "User's proteinRate",
              "example": "91"
            },
            "fatRate": {
              "type": "integer",
              "description": "User's fatRate",
              "example": "32"
            },
            "carbsRate": {
              "type": "integer",
              "description": "User's carbsRate",
              "example": "200"
            }
          }
        },
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ODJiNzNkZGI5MmFjMjA2MTNlN2E4ZiIsImlhdCI6MTcwMzEwMTg0NywiZXhwIjoyMDE4Njc3ODQ3fQ.9H3f58OoT5PmMHzGVsS0cCdMvvu6V5UrJ_hasxNP5FI"
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
            
          },
          "password": {
            "type": "string",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "user": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "User's email",
              "example": "Alex"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "goal": {
              "type": "string",
              "description": "User's goal",
              "example": "Maintain"
            },
            "gender": {
              "type": "string",
              "description": "User's gender",
              "example": "male"
            },
            "age": {
              "type": "integer",
              "description": "User's age",
              "example": "18"
            },
            "height": {
              "type": "integer",
              "description": "User's height",
              "example": "160"
            },
            "weight": {
              "type": "integer",
              "description": "User's weight",
              "example": "60"
            },
            "activityLevel": {
              "type": "number",
              "description": "User's activityLevel",
              "example": "1.2"
            },
            "avatar": {
              "type": "string",
              "description": "User's gravatar",
              "example": "//www.gravatar.com/avatar/6bf1c3e37665abb9a1e0e3f81796c87c?s=2503"
            },
            "waterRate": {
              "type": "integer",
              "description": "User's waterRate",
              "example": "2150"
            },
            "BMRRate": {
              "type": "integer",
              "description": "User's BMRRate",
              "example": "1451"
            },
            "proteinRate": {
              "type": "integer",
              "description": "User's proteinRate",
              "example": "91"
            },
            "fatRate": {
              "type": "integer",
              "description": "User's fatRate",
              "example": "32"
            },
            "carbsRate": {
              "type": "integer",
              "description": "User's carbsRate",
              "example": "200"
            }
          }
        },
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ODJiNzNkZGI5MmFjMjA2MTNlN2E4ZiIsImlhdCI6MTcwMzEwMTg0NywiZXhwIjoyMDE4Njc3ODQ3fQ.9H3f58OoT5PmMHzGVsS0cCdMvvu6V5UrJ_hasxNP5FI"
        }
      },
      "ForgotPasswordRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "va7ul@ukr.net"
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's email",
                "example": "Alice"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "example": "alice123@gmail.com"
              },
              "goal": {
                "type": "string",
                "description": "User's goal",
                "example": "Maintain"
              },
              "gender": {
                "type": "string",
                "description": "User's gender",
                "example": "female"
              },
              "age": {
                "type": "integer",
                "description": "User's age",
                "example": "18"
              },
              "height": {
                "type": "integer",
                "description": "User's height",
                "example": "160"
              },
              "weight": {
                "type": "integer",
                "description": "User's weight",
                "example": "60"
              },
              "activityLevel": {
                "type": "number",
                "description": "User's activityLevel",
                "example": "1.2"
              },
              "avatar": {
                "type": "string",
                "description": "User's gravatar",
                "example": "//www.gravatar.com/avatar/6bf1c3e37665abb9a1e0e3f81796c87c?s=2503"
              },
              "waterRate": {
                "type": "integer",
                "description": "User's waterRate",
                "example": "2150"
              },
              "BMRRate": {
                "type": "integer",
                "description": "User's BMRRate",
                "example": "1451"
              },
              "proteinRate": {
                "type": "integer",
                "description": "User's proteinRate",
                "example": "91"
              },
              "fatRate": {
                "type": "integer",
                "description": "User's fatRate",
                "example": "32"
              },
              "carbsRate": {
                "type": "integer",
                "description": "User's carbsRate",
                "example": "200"
              }
            }
          }
        }
      },
      "GoalUpdateResponse": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "description": "Goal updated.",
              "example": "Goal updated."
            },
            "user": {
              "type": "object",
              "properties": {
                "goal": {
                  "type": "string",
                  "example": "Maintain"
                },
                "proteinRate": {
                  "type": "number",
                  "example": 159
                },
                "fatRate": {
                  "type": "number",
                  "example": 47
                },
                "carbsRate": {
                  "type": "number",
                  "example": 265
                }
              }
            }
          }
        },
      
        
      "GoalUpdateRequest": {
          "type": "object",
          "properties": {
            "goal": {
              "type": "string",
              "description": "Choose from values: ['Lose Fat', 'Maintain', 'Gain Muscle'].",
              "example": "Lose Fat"
            }
          },
          "required": [
            "goal"
          ]
        },
      "WeightUpdateRequest": {
          "type": "object",
          "properties": {
            "weight": {
              "type": "number",
              "description": "User's new weight.",
              "example": 55
            }
          },
          "required": [
            "weight"
          ]
        },
      "WeightUpdateResponses": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "description": "Weidht updated.",
              "example": "Weidht updated."
            },
            "user": {
              "type": "object",
              "properties": {
                "weight": {
                  "type": "number",
                  "example": 55
                },
                "BMRRate": {
                  "type": "number",
                  "example": 2123
                },
                "waterRate": {
                  "type": "number",
                  "example": 2950
                },
                "proteinRate": {
                  "type": "number",
                  "example": 133
                },
                "fatRate": {
                  "type": "number",
                  "example": 47
                },
                "carbsRate": {
                  "type": "number",
                  "example": 292
                }
              }
            }
          }
        },
      "WaterIntakeGetResponse": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "description": "Result of the operation"
            },
            "waterIntakeRecord": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "6586b3df8f73e97cf6030fe8"
                },
                "owner": {
                  "type": "string",
                  "example": "658619e2e760d9bf9d21b7e8"
                },
                "value": {
                  "type": "number",
                  "example": 2100
                },
                "date": {
                  "type": "string",
                  "example": "2023-12-23"
                },
                "month": {
                  "type": "number",
                  "example": "12"
                }
              }
            }
          }
        },
      "WaterIntakeInput": {
          "type": "object",
          "properties": {
            "value": {
              "type": "number",
              "description": "Amount of water intake",
              "example": 300
            }            
          }
        },
      "WaterIntakeInputResponse": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "description": "Result of the operation"
            },
            "water": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "6586b3df8f73e97cf6030fe8"
                },
                "owner": {
                  "type": "string",
                  "example": "658619e2e760d9bf9d21b7e8"
                },
                "value": {
                  "type": "number",
                  "example": 2100
                },
                "date": {
                  "type": "string",
                  "example": "2023-12-23"
                }
              }
            }
          }
        },  
      "WaterIntakeDeleteInput": {
          "type": "object",
          "required": [
            "_id"
          ],
          "properties": {
            "_id": {
              "type": "string",
              "description": "Identifier of the water intake record to delete",
              "example": "6586b3828f73e97cf6030fd5"
            }
          }
        }, 
      "UserStatisticsResponse": {
          "type": "object",
          "properties": {
            "weightMonth": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Id user",
                    "example": "65856ea9e12be5cdeb2291a5"
                  },
                  "value": {
                    "type": "number",
                    "description": "Weight of the day.",
                    "example": 45
                  },
                  "date": {
                    "type": "string",
                    "description": "Date of current value.",
                    "example": "2023-12-09"
                  }
                }
              }
            },
            "waterMonth": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Id user",
                    "example": "65857276dda32a85a05f40d8"
                  },
                  "value": {
                    "type": "number",
                    "description": "Water of the day.",
                    "example": 1876
                  },
                  "date": {
                    "type": "string",
                    "description": "Date of current value.",
                    "example": "2023-12-09"
                  }
                }
              }
            },
            "caloriesMonth": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Id user",
                    "example": "65857276dda32a85a05f40d8"
                  },
                  "value": {
                    "type": "number",
                    "description": "Calories of the day.",
                    "example": 2087
                  },
                  "date": {
                    "type": "string",
                    "description": "Date of current value.",
                    "example": "2023-12-09"
                  }
                }
              }
            }
          }
        }, 
      "UpdateUserResponse": {
          "type": "object",
          "properties": {
              "name": {
                "type": "string",
                "description": "User's email",
                "example": "Alice"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "example": "alice123@gmail.com"
              },
              "goal": {
                "type": "string",
                "description": "User's goal",
                "example": "Maintain"
              },
              "gender": {
                "type": "string",
                "description": "User's gender",
                "example": "female"
              },
              "age": {
                "type": "integer",
                "description": "User's age",
                "example": "18"
              },
              "height": {
                "type": "integer",
                "description": "User's height",
                "example": "160"
              },
              "weight": {
                "type": "integer",
                "description": "User's weight",
                "example": "60"
              },
              "activityLevel": {
                "type": "number",
                "description": "User's activityLevel",
                "example": "1.2"
              },
              "avatar": {
                "type": "string",
                "description": "User's gravatar",
                "example": "//www.gravatar.com/avatar/6bf1c3e37665abb9a1e0e3f81796c87c?s=2503"
              },
              "waterRate": {
                "type": "integer",
                "description": "User's waterRate",
                "example": "2150"
              },
              "BMRRate": {
                "type": "integer",
                "description": "User's BMRRate",
                "example": "1451"
              },
              "proteinRate": {
                "type": "integer",
                "description": "User's proteinRate",
                "example": "91"
              },
              "fatRate": {
                "type": "integer",
                "description": "User's fatRate",
                "example": "32"
              },
              "carbsRate": {
                "type": "integer",
                "description": "User's carbsRate",
                "example": "200"
              }
            }
          },
     "FoodIntakePostResponse": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Result of the operation"
                  },
                  "UserFood": {
                    "type": "array",
                    "properties": {
                      "owner": {
                        "type": "string",
                        "example": "658619e2e760d9bf9d21b7e8"
                      },
                      "date": {
                        "type": "string",
                        "example": "2023-12-24"
                      },
                      "mounth": {
                        "type": "number",
                        "example": "12"
                      },
                      "total proteins": {
                        "type": "number",
                        "example": "15"
                      },
                      "total fats": {
                        "type": "number",
                        "example": "25"
                      },
                      "totalCarbs": {
                        "type": "number",
                        "example": "30"
                      },
                      "totalCalories": {
                        "type": "number",
                        "example": "50"
                      },
                      "typeFood": {
                        "type": "object",
                        "example": "breakfast",
                        "properties": {
                          "name": "string",
                          "example": "apple"
                        },
                        "calories": {
                          "type": "number",
                          "example": "50"
                        },
                        "nutrition": {
                          "type": "object",
                          "properties": {
                            "carbogidrate": {
                              "type": "number",
                              "example": "30"
                            },
                            "protein": {
                              "type": "number",
                              "example": "15"
                            },
                            "fat": {
                              "type": "number",
                              "example": "25"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }, 
       
    "FoodIntakeGetResponse": {
  "type": "object",
  "properties": {
    "message": {
      "type": "string",
      "description": "Result of the operation"
    },
    "UserFood": {
      "type": "array",
    "properties": {
    
    "owner": {
      "type": "string",
      "example": "658619e2e760d9bf9d21b7e8"
    },
    "date": {
      "type": "string",
      "example": "2023-12-24"
    },
    "mounth": {
      "type": "number",
      "example": "12"
    }, 
    "total proteins": {
      "type": "number",
      "example": "15"

    },
    "total fats": {
   "type": "number",
    "example": "25"
    },
    "totalCarbs": {
      "type": "number",
      "example": "30"
    },
    "totalCalories": {
      "type": "number",
      "example": "50" 
    }, 
    "typeFood":{
      "type": "object",
      "example": "breakfast",
      "properties": {
        "name": "string",
        "example": "apple"
      },
      "calories": {
        "type": "number",
        "example": "50"
      },
    
        "nutrition": {
          "type": "object",
          "properties": {
            "carbogidrate": {
              "type": "number",
              "example": "30"
            },
            "protein": {
              "type": "number",
              "example": "15"
            },
            "fat": {
              "type": "number",
              "example": "25"
            }
       
  }
    }
  }
}
    }
  
        
      }
    },
"FoodIntakeInput": {
  "type": "object",
  "properties": {
    "typeFood": {
      "type": "string",
      "example": "breakfast",
      "userFood": {
        "type": "array",
          "properties": {
            "name": "string",
            "example": "apple"
          },
          "calories": {
            "type": "number",
            "example": "50"
          },
          "nutrition": {
            "type": "object",
            "properties": {
              "carbogidrate": {
                "type": "number",
                "example": "30"
              },
              "protein": {
                "type": "number",
                "example": "15"
              },
              "fat": {
                "type": "number",
                "example": "25"
              }
            }
          }
        }
      }
    }
  },

"FoodIntakeDeleteInput": {
"type": "object",
"properties": {
  "typeFood": {
    "type": "string",
    "example": "breakfast",
    "userFood": {
      "type": "object",
      "example": "breakfast"

}

    }
  }
},
    
      "RecommendedFoodResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Id product",
              "example": "657b338690119f0a27c9426c"
            },
            "name": {
              "type": "string",
              "description": "Name of the product",
              "example": "Apples"
            },
            "amount": {
              "type": "string",
              "description": "Amount of the product",
              "example": "100 g"
            },
            "img": {
              "type": "string",
              "description": "Image of the product",
              "example": "https://res.cloudinary.com/dec1shvoo/image/upload/v1692479041/Your%20health/pngfind.com-apple-png-1037796_udjai9.png"
            },
            "calories": {
              "type": "number",
              "description": "Calories content",
              "example": 52
            },
            "nutrition": {
              "type": "object",
              "properties": {
                "carbohydrates": {
                  "type": "number",
                  "description": "Carbonohidrates content",
                  "example": 14
                },
                "protein": {
                  "type": "number",
                  "description": "Protein content",
                  "example": 0.3
                },
                "fat": {
                  "type": "number",
                  "description": "Fat content",
                  "example": 0.2
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}

