{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Healthy-Life API",
    "description": "Healthy-Life API. It is a full-fledged RESTful API linked to an extensive database and multiple routes.",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [
    { "url": "http://localhost:3000" },
    { "url": "healthy-life-backend-b6ck.onrender.com" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Recommended Food",
      "description": "Recommended food endpoints"
    },
    {
      "name": "Water Intake",
      "description": "Water intake endpoints"
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "security": [{ "Bearer": [] }],
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email already in use",
            "content": {}
          }
        }
      }
    },
    "/api/auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logs user into the system",
        "parameters": [],
        "requestBody": {
          "description": "User login object",
          "security": [{ "Bearer": [] }],
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password invalid"
          }
        }
      }
    },
    "/api/auth/forgot-password": {
      "post": {
        "tags": ["Auth"],
        "summary": "Sending a new password to the mail",
        "parameters": [],
        "requestBody": {
          "description": "Forgout-Password object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgoutPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password updated successfully. Check your email for the new password"
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "204": {
            "description": "Logout success"
          },
          "401": {
            "description": "User unauthorized"
          }
        }
      }
    },
    "/api/recommended-food": {
      "get": {
        "tags": ["Recommended Food"],
        "summary": "Get food recommendations",
        "description": "Retrieve a list of recommended food items.",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful request. Returns a list of recommended food items.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendedFood"
                },
                "example": [
                  {
                    "_id": "657b338690119f0a27c9426c",
                    "name": "Apples",
                    "amount": "100 g",
                    "img": "https://res.cloudinary.com/dec1shvoo/image/upload/v1692479041/Your%20health/pngfind.com-apple-png-1037796_udjai9.png",
                    "calories": 52,
                    "nutrition": {
                      "carbohydrates": 14,
                      "protein": 0.3,
                      "fat": 0.2
                    }
                  }
                ]
              }
            }
          },
          "500": {
            "description": "Server error. Unable to retrieve food recommendations."
          }
        }
      }
    },
    "/api/user/water-intake": {
      "post": {
        "tags": ["Water Intake"],
        "summary": "Додати запис про прийом води",
        "description": "Додає новий запис про прийом води для автентифікованого користувача",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaterIntakeInput"
              },
              "example": {
                "value": "500",
                "token": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успішно доданий запис про прийом води",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterIntakeInputResponse"
                },
                "example": {
                  "message": "Success",
                  "result": {
                    "value": 500,
                    "token": ""
                  }
                }
              }
            }
          },
          "500": {
            "description": "Не вдалося додати запис про прийом води"
          }
        }
      },
      "delete": {
        "tags": ["Water Intake"],
        "summary": "Видалити запис про прийом води",
        "description": "Видаляє запис про прийом води для зареєстрованого користувача",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaterIntakeDeleteInput"
              },
              "example": { "_id": "" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успішно видалений запис про прийом води"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password",
          "goal",
          "gender",
          "age",
          "height",
          "weight",
          "activityLevel"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Alex"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "goal": {
            "type": "string",
            "description": "User's goal",
            "example": "Maintain"
          },
          "gender": {
            "type": "string",
            "description": "User's gender",
            "example": "male"
          },
          "age": {
            "type": "integer",
            "description": "User's age",
            "example": "18"
          },
          "height": {
            "type": "integer",
            "description": "User's height",
            "example": "160"
          },
          "weight": {
            "type": "integer",
            "description": "User's weight",
            "example": "60"
          },
          "activityLevel": {
            "type": "number",
            "description": "User's activityLevel",
            "example": "1.2"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "user": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "User's email",
              "example": "Alex"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "goal": {
              "type": "string",
              "description": "User's goal",
              "example": "Maintain"
            },
            "gender": {
              "type": "string",
              "description": "User's gender",
              "example": "male"
            },
            "age": {
              "type": "integer",
              "description": "User's age",
              "example": "18"
            },
            "height": {
              "type": "integer",
              "description": "User's height",
              "example": "160"
            },
            "weight": {
              "type": "integer",
              "description": "User's weight",
              "example": "60"
            },
            "activityLevel": {
              "type": "number",
              "description": "User's activityLevel",
              "example": "1.2"
            },
            "avatar": {
              "type": "string",
              "description": "User's gravatar",
              "example": "//www.gravatar.com/avatar/6bf1c3e37665abb9a1e0e3f81796c87c?s=2503"
            },
            "waterRate": {
              "type": "integer",
              "description": "User's waterRate",
              "example": "2150"
            },
            "BMRRate": {
              "type": "integer",
              "description": "User's BMRRate",
              "example": "1451"
            },
            "proteinRate": {
              "type": "integer",
              "description": "User's proteinRate",
              "example": "91"
            },
            "fatRate": {
              "type": "integer",
              "description": "User's fatRate",
              "example": "32"
            },
            "carbsRate": {
              "type": "integer",
              "description": "User's carbsRate",
              "example": "200"
            }
          }
        },
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ODJiNzNkZGI5MmFjMjA2MTNlN2E4ZiIsImlhdCI6MTcwMzEwMTg0NywiZXhwIjoyMDE4Njc3ODQ3fQ.9H3f58OoT5PmMHzGVsS0cCdMvvu6V5UrJ_hasxNP5FI"
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "exampleEmail@mail.com"
          },
          "password": {
            "type": "string",
            "example": "userPassword"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "user": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "User's email",
              "example": "Alex"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "goal": {
              "type": "string",
              "description": "User's goal",
              "example": "Maintain"
            },
            "gender": {
              "type": "string",
              "description": "User's gender",
              "example": "male"
            },
            "age": {
              "type": "integer",
              "description": "User's age",
              "example": "18"
            },
            "height": {
              "type": "integer",
              "description": "User's height",
              "example": "160"
            },
            "weight": {
              "type": "integer",
              "description": "User's weight",
              "example": "60"
            },
            "activityLevel": {
              "type": "number",
              "description": "User's activityLevel",
              "example": "1.2"
            },
            "avatar": {
              "type": "string",
              "description": "User's gravatar",
              "example": "//www.gravatar.com/avatar/6bf1c3e37665abb9a1e0e3f81796c87c?s=2503"
            },
            "waterRate": {
              "type": "integer",
              "description": "User's waterRate",
              "example": "2150"
            },
            "BMRRate": {
              "type": "integer",
              "description": "User's BMRRate",
              "example": "1451"
            },
            "proteinRate": {
              "type": "integer",
              "description": "User's proteinRate",
              "example": "91"
            },
            "fatRate": {
              "type": "integer",
              "description": "User's fatRate",
              "example": "32"
            },
            "carbsRate": {
              "type": "integer",
              "description": "User's carbsRate",
              "example": "200"
            }
          }
        },
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ODJiNzNkZGI5MmFjMjA2MTNlN2E4ZiIsImlhdCI6MTcwMzEwMTg0NywiZXhwIjoyMDE4Njc3ODQ3fQ.9H3f58OoT5PmMHzGVsS0cCdMvvu6V5UrJ_hasxNP5FI"
        }
      },
      "ForgoutPasswordRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "exampleEmail@mail.com"
          }
        }
      },
      "RecommendedFood": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Id product"
            },
            "name": {
              "type": "string",
              "description": "Name of the product"
            },
            "amount": {
              "type": "string",
              "description": "Amount of the product"
            },
            "img": {
              "type": "string",
              "description": "Image of the product"
            },
            "calories": {
              "type": "number",
              "description": "Calories content"
            },
            "nutrition": {
              "type": "object",
              "properties": {
                "carbohydrates": {
                  "type": "number",
                  "description": "Carbonohidrates content"
                },
                "protein": {
                  "type": "number",
                  "description": "Protein content"
                },
                "fat": {
                  "type": "number",
                  "description": "Fat content"
                }
              }
            }
          }
        }
      },
      "WaterIntakeInput": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "Amount of water intake"
          },
          "token": {
            "type": "string",
            "description": "User's authentication token"
          }
        }
      },
      "WaterIntakeInputResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Result of the operation"
          },
          "result": {
            "type": "object",
            "description": "Result of the operation"
          }
        }
      },
      "WaterIntakeDeleteInput": {
        "type": "object",
        "required": ["_id"],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Identifier of the water intake record to delete"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
